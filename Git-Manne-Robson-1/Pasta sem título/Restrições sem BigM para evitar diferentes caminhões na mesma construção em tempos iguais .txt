  p-Cx.txt
p-Cx.txt
 Nome Instancia = Cx
VEHICLE  NUMBER  CAPACITY  
25(25)   200
CUSTOMER  CUST  NO.  XCOORD.  YCOORD.  DEMAND  READY  TIME  DUE  DATE  SERVICE  TIME  


Nome: Cx
Numero de Veiculos: 25
Capacidade: 200

 Numero No 	 Coordenada X 	 Coordenada Y 	 Demanda 	 InicioJanela 	 FimJanela 	 TempoServico
	 0		40		50		0		0		1236		0
	 1		45		68		10		912		967		90
	 2		45		70		30		825		870		90
	 3		42		66		10		65		146		90
	 4		42		68		10		727		782		90
	 5		22		85		10		15		67		90
	 6		20		85		20		621		702		90
	 7		25		85		20		170		225		90
	 8		22		75		20		255		324		90
	 9		38		70		10		534		605		90
	 10		35		66		10		357		410		90
	 11		35		69		10		448		505		90
	 12		40		66		20		652		721		90
	 13		38		68		30		30		92		90
	 14		42		65		10		567		620		90
	 15		20		80		40		384		429		90
	 16		40		69		40		475		528		90
	 17		18		75		20		99		148		90
	 18		15		75		20		179		254		90
	 19		15		80		10		278		345		90
	 20		30		50		10		10		73		90
	 21		30		52		20		914		965		90
	 22		28		52		20		812		883		90
	 23		28		55		10		732		777		90
	 24		25		50		10		65		144		90
	 25		25		52		40		169		224		90


 Tem diretorio "ComR" !!  
./ComR/CmdR-p-Cx.txt

 Tem diretorio "ComE" !!  
 Tem diretorio "InstS" !!  
 Nome = p-Cx-V1.txt

  Nome = p-Cx-V1.txt

 A = p-Cx-V1.txt  B = ./p-Cx-V1.txt
 Nome dados = p-Cx-V1-Dados.txt

p-Cx-V1.txt
 Modelo <= p-Cx-V1.txt
Default row names c1, c2 ... being created.
Tried aggregator 2 times.
MIP Presolve eliminated 4845 rows and 1576 columns.
MIP Presolve modified 96661 coefficients.
Aggregator did 7 substitutions.
Reduced MIP has 8657 rows, 3760 columns, and 28224 nonzeros.
Reduced MIP has 3584 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.09 sec. (36.28 ticks)
Found incumbent of value 85.077029 after 0.13 sec. (59.46 ticks)
Probing time = 0.03 sec. (2.06 ticks)
Cover probing fixed 1 vars, tightened 151 bounds.
Tried aggregator 1 time.
MIP Presolve eliminated 91 rows and 1 columns.
MIP Presolve modified 560 coefficients.
Reduced MIP has 8566 rows, 3759 columns, and 28042 nonzeros.
Reduced MIP has 3584 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (10.83 ticks)
Probing time = 0.01 sec. (2.33 ticks)
Clique table members: 19.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.10 sec. (29.16 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                           85.0770       65.1500      316   23.42%
      0     0       65.1905    90       85.0770       65.1905      316   23.37%
*     0+    0                           80.3900       65.1905      482   18.91%
      0     0       65.1941   108       80.3900     Cuts: 202      482   18.90%
      0     0       65.2377    66       80.3900     Cuts: 203      636   18.85%
      0     0       65.5201    67       80.3900     Cuts: 173      751   18.50%
      0     0       65.6511    68       80.3900     Cuts: 105      823   18.33%
      0     0       65.6511    64       80.3900     Cuts: 114      899   18.33%
      0     0       65.6511    61       80.3900     Cuts: 103      983   18.33%
*     0+    0                           77.1995       65.6511      983   14.96%
*     0+    0                           77.0040       65.6511      983   14.74%
*     0+    0                           76.8434       65.6511      983   14.57%
*     0+    0                           76.7829       65.6511      983   14.50%
      0     2       65.6511    56       76.7829       65.6511      983   14.50%
Elapsed time = 2.57 sec. (996.77 ticks, tree = 0.01 MB, solutions = 6)
*    43+   35                           72.1333       66.9171     3096    7.23%
     81    64       68.3124    36       72.1333       68.3124     4008    5.30%
*   187+  141                           72.0408       68.3124     5795    5.18%
    277   222       68.9668    41       72.0408       68.3124     7157    5.18%
*   378+  315                           71.7354       68.3124     8793    4.77%
*   478+  402                           71.5727       68.3124    10285    4.56%
    522   445       70.2811    30       71.5727       68.3124    10941    4.56%
    805   694       68.3124    30       71.5727       68.3124    14538    4.56%
*   879+  756                           71.4061       68.3124    15805    4.33%
*   951   821      integral     0       71.3844       68.3124    16686    4.30%
   1202  1035       68.3124    30       71.3844       68.3124    19663    4.30%
   1219   944       68.3124    44       71.3844       68.3124    20031    4.30%
   1287   762       68.3124    35       71.3844       68.3124    21017    4.30%
   1402   692       69.6335    49       71.3844       68.3124    22784    4.30%
*  1761   514      integral     0       71.3758       68.3124    27480    4.29%
Elapsed time = 10.11 sec. (4174.37 ticks, tree = 1.24 MB, solutions = 17)
*  1768   448      integral     0       71.0727       68.3124    27528    3.88%
*  1987   460      integral     0       70.9924       68.3124    30443    3.78%
*  2696   865      integral     0       70.9404       68.3124    40723    3.70%
   4115  1623       69.9361    26       70.9404       68.3124    63149    3.70%
   5905  2596       70.6976    24       70.9404       68.3124    88774    3.70%
   7797  3685       70.8300    17       70.9404       68.3124   112388    3.70%
   9726  4752       70.3643    20       70.9404       68.3124   140588    3.70%
  11827  6030       70.2636    39       70.9404       68.3124   169450    3.70%
  13600  6956       68.3124    47       70.9404       68.3124   196374    3.70%
* 13775  7044      integral     0       70.8758       68.3124   199292    3.62%
Elapsed time = 26.03 sec. (10578.50 ticks, tree = 8.71 MB, solutions = 21)
* 14180+ 7055                           70.7737       68.3124   207760    3.48%
* 15370+ 7131                           70.7497       68.3124   223262    3.44%
* 15410+ 7145                           70.6976       68.3124   223774    3.37%
  15474  7183       68.7979    44       70.6976       68.3124   224447    3.37%
  17503  7503       70.6976    29       70.6976       68.3124   251488    3.37%
  19377  8242       68.3124    52       70.6976       68.3124   281075    3.37%
  21314  8834       69.9084    42       70.6976       68.4230   307051    3.22%
  23451  9585       70.4061    21       70.6976       68.4448   335237    3.19%
  24121  9782       68.6373    45       70.6976       68.4645   347757    3.16%
  25573 10144       69.1138    36       70.6976       68.5554   366864    3.03%
  27767 10799       69.0969    34       70.6976       68.6335   393410    2.92%
  30155 11354       69.8601    28       70.6976       68.6335   421335    2.92%
  32109 11620       69.9385    32       70.6976       68.7693   448869    2.73%
Elapsed time = 53.72 sec. (22115.71 ticks, tree = 14.53 MB, solutions = 28)
  34377 12281       68.7979    44       70.6976       68.7979   480707    2.69%
  36752 12846       68.8669    42       70.6976       68.7979   512330    2.69%
  39966 13168    infeasible             70.6976       68.9084   541273    2.53%
  42072 13643       70.5363    18       70.6976       68.9704   572839    2.44%
  44491 13883       70.6704    21       70.6976       69.1274   601748    2.22%
  46762 14049       70.6206    20       70.6976       69.2038   628989    2.11%
  48984 14297       70.3643    18       70.6976       69.3038   654069    1.97%
  51486 15073    infeasible             70.6976       69.3523   683733    1.90%
  53762 15923       70.3843    22       70.6976       69.3643   710744    1.89%
  56193 16234       70.2636    38       70.6976       69.4361   735909    1.78%
Elapsed time = 78.40 sec. (31663.82 ticks, tree = 20.52 MB, solutions = 28)
  58443 16368       69.9847    38       70.6976       69.4826   759708    1.72%
  60543 16688    infeasible             70.6976       69.5371   782437    1.64%
  62763 16458       70.0622    23       70.6976       69.6163   805102    1.53%
  64686 16699       70.0429    40       70.6976       69.6335   834276    1.51%
  66538 17039       70.1028    27       70.6976       69.6371   861802    1.50%
  68960 17486       70.4551    19       70.6976       69.6633   883170    1.46%
  71161 17871    infeasible             70.6976       69.6976   908192    1.41%
  73638 18501       69.9749    23       70.6976       69.6976   933428    1.41%
  76135 19327    infeasible             70.6976       69.6976   955617    1.41%
  78710 19472       70.1643    19       70.6976       69.7171   982737    1.39%
Elapsed time = 107.95 sec. (41208.46 ticks, tree = 25.27 MB, solutions = 28)
  81356 19264    infeasible             70.6976       69.7695  1008748    1.31%
  83082 18804    infeasible             70.6976       69.7979  1038585    1.27%
  85360 18609       69.8704    20       70.6976       69.8697  1059265    1.17%
  87440 19315       69.8704    23       70.6976       69.8704  1080543    1.17%
  89539 18717    infeasible             70.6976       69.9140  1106868    1.11%
  92014 18671       69.9651    36       70.6976       69.9651  1130526    1.04%
  94477 18307    infeasible             70.6976       69.9967  1154655    0.99%
  96803 18365       70.0831    16       70.6976       70.0310  1177657    0.94%
  99394 18997       70.1415    26       70.6976       70.0310  1199622    0.94%
 101860 19419       70.0319    28       70.6976       70.0310  1224752    0.94%
Elapsed time = 132.04 sec. (50757.38 ticks, tree = 25.35 MB, solutions = 28)
 104469 18546       70.0854    26       70.6976       70.0831  1249202    0.87%
 106700 17330       70.3633    22       70.6976       70.1183  1273242    0.82%
 109487 16869       70.1633    26       70.6976       70.1477  1295882    0.78%
 112232 16313    infeasible             70.6976       70.1973  1314711    0.71%
 114853 14786       70.2737    26       70.6976       70.2636  1337322    0.61%
 117984 13653       70.3300    19       70.6976       70.3300  1356389    0.52%
 120855 12611        cutoff             70.6976       70.3643  1378577    0.47%
 123624 11825       70.6633    23       70.6976       70.3643  1403425    0.47%
 126463  9817    infeasible             70.6976       70.4258  1425221    0.38%
 129903  8728    infeasible             70.6976       70.4749  1445808    0.32%
Elapsed time = 156.16 sec. (60310.97 ticks, tree = 11.54 MB, solutions = 28)
 133451  7418       70.5268    25       70.6976       70.5028  1464457    0.28%
 136917  5748    infeasible             70.6976       70.5854  1482457    0.16%
 140279  4090       70.6143    17       70.6976       70.6132  1500549    0.12%
 143802  2434    infeasible             70.6976       70.6405  1520845    0.08%

Cover cuts applied:  32
Mixed integer rounding cuts applied:  15
Zero-half cuts applied:  10
Gomory fractional cuts applied:  3

Root node processing (before b&c):
  Real time             =    2.56 sec. (994.30 ticks)
Parallel b&c, 4 threads:
  Real time             =  165.05 sec. (63864.38 ticks)
  Sync time (average)   =    9.16 sec.
  Wait time (average)   =    0.03 sec.
                          ------------
Total (root+branch&cut) =  167.61 sec. (64858.68 ticks)
Solution status = Optimal
Solution cost = 70.6976
 Veiculo 1 Sai as 7
	 Entrega[Construcao->2][Job->1] as 8.50
	 Entrega[Construcao->2][Job->5] as 9.17
	 Entrega[Construcao->5][Job->4] as 10.99
 Veiculo 2 Sai as 7
	 Entrega[Construcao->1][Job->2] as 8.17
	 Entrega[Construcao->2][Job->4] as 9.00
	 Entrega[Construcao->5][Job->3] as 10.82
 Veiculo 3 Sai as 7
	 Entrega[Construcao->1][Job->3] as 8.33
	 Entrega[Construcao->6][Job->1] as 10.00
 Veiculo 4 Sai as 7
	 Entrega[Construcao->1][Job->1] as 8.00
	 Entrega[Construcao->2][Job->2] as 8.67
	 Entrega[Construcao->5][Job->1] as 10.49
 Veiculo 5 Sai as 7
	 Entrega[Construcao->3][Job->1] as 8.00
	 Entrega[Construcao->3][Job->4] as 8.50
	 Entrega[Construcao->4][Job->2] as 10.17
 Veiculo 6 Sai as 7
	 Entrega[Construcao->3][Job->3] as 8.33
	 Entrega[Construcao->4][Job->1] as 10.00
 Veiculo 7 Sai as 7
	 Entrega[Construcao->2][Job->3] as 8.83
	 Entrega[Construcao->3][Job->2] as 8.17
	 Entrega[Construcao->5][Job->2] as 10.65
 Veiculo 8 Sai as 7
 Veiculo 9 Sai as 7
 Veiculo 10 Sai as 7
 Veiculo 11 Sai as 7
 Veiculo 12 Sai as 7
 Veiculo 13 Sai as 7
 Veiculo 14 Sai as 7


           Tempo de entrega em cada cliente         
 Cliente 1	[ 8.00	<=		8.00[v4]	8.17[v2]	8.33[v3]	<=	8.50]
 Cliente 2	[ 8.50	<=		8.50[v1]	8.67[v4]	8.83[v7]	9.00[v2]	9.17[v1]	<=	10.00]
 Cliente 3	[ 8.00	<=		8.00[v5]	8.17[v7]	8.33[v6]	8.50[v5]	<=	8.50]
 Cliente 4	[ 10.00	<=		10.00[v6]	10.17[v5]	<=	11.00]
 Cliente 5	[ 9.00	<=		10.49[v4]	10.65[v7]	10.82[v2]	10.99[v1]	<=	11.00]
 Cliente 6	[ 10.00	<=		10.00[v3]	<=	11.00]


           Veiculos usados         
Planta 1
  Veiculo 1 	[clientes ->	2	5	]
  Veiculo 2 	[clientes ->	1	2	5	]
  Veiculo 3 	[clientes ->	1	6	]
  Veiculo 4 	[clientes ->	1	2	5	]
  Veiculo 5 	[clientes ->	3	4	]
  Veiculo 6 	[clientes ->	3	4	]
  Veiculo 7 	[clientes ->	2	3	5	]

Planta 2

 Galo! 

